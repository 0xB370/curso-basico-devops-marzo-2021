name: Build and Deploy EKS

on: push

env:
  K8S_NAMESPACE: challenge-prd
  K8S_NAMESPACE_DEV: challenge-dev
  AWS_REGION: us-east-2
  EKS_CLUSTER_NAME: craftech-challenge
  FRONTEND_REPO: beto2323/craftech-frontend
  BACKEND_REPO: beto2323/craftech-backend

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Run Unit Tests
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: npm ci
        working-directory: ./5-desafio/frontend/
      - run: npm test
        working-directory: ./5-desafio/frontend/
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ./5-desafio/backend/
      - name: Run Tests
        run: |
          python manage.py test
        working-directory: ./5-desafio/backend/

      - name: Push Frontend to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./5-desafio/frontend/
          repository: ${{ env.FRONTEND_REPO }}
          tag_with_ref: true
          tag_with_sha: true
          tags: latest, ${{ github.sha }}
        
      - name: Push Backend to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./5-desafio/backend/
          repository: ${{ env.BACKEND_REPO }}
          tag_with_ref: true
          tag_with_sha: true
          tags: latest, ${{ github.sha }}
      
      - name: Deploy the Docker image to the kubernetes dev cluster
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: cancue/eks-action@v0.0.2
        env:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: $AWS_REGION
          cluster_name: $EKS_CLUSTER_NAME
        with:
          args: |
            kubectl set image deployment backend -n $K8S_NAMESPACE_DEV backend=$BACKEND_REPO:${{ github.sha }}
            kubectl set image deployment frontend -n $K8S_NAMESPACE_DEV frontend=$FRONTEND_REPO:${{ github.sha }}
            kubectl rollout status deployment/backend -n $K8S_NAMESPACE_DEV
            kubectl rollout status deployment/frontend -n $K8S_NAMESPACE_DEV
      
      - name: Deploy the Docker image to the kubernetes prod cluster
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: cancue/eks-action@v0.0.2
        env:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: $AWS_REGION
          cluster_name: $EKS_CLUSTER_NAME
        with:
          args: |
            kubectl set image deployment backend -n $K8S_NAMESPACE backend=$BACKEND_REPO:${{ github.sha }}
            kubectl set image deployment frontend -n $K8S_NAMESPACE frontend=$FRONTEND_REPO:${{ github.sha }}
            kubectl rollout status deployment/backend -n $K8S_NAMESPACE
            kubectl rollout status deployment/frontend -n $K8S_NAMESPACE
      
      - name: Slack Notification
        if: always()
        uses: ravsamhq/notify-slack-action@master
        with:
          status: ${{ job.status }}
          notify_when: 'success,failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}